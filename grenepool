#!/bin/bash
#### Description: Pipeline for cleaning, mapping, and processing pool-seq pair end fastqc files.
#### Required software: skewer - bwa - samtools
#### Written by:  Moises Exposito-Alonso moisesexpositoalonso@gmail.com on 05-2017


# READ ARGUMENTS

if test $# -eq 0
    then 
     echo ""
     echo "=> No parameters defined!"
     echo ""
     echo "usage:   ./grenepool [samplename] [inputfolder] [outfolder]  "
     echo "example: ./grenepool  S1  ../data . "
     echo "       samplename: name of the sample, from S1 to S10"
     echo "       inputfolder: path where the .fastaq.gz files are stored"
     echo "       outfolder:   path where outputs will be printed"
     echo ""

     exit 1
fi


samplename=$1
inputfolder=$2
outfolder=$3


samfile=$samplename".sam"
bamfile=$samplename".bam"


read1name="francoisfield_"$samplename"_L005_R1_001.fastq.gz"
read2name="francoisfield_"$samplename"_L005_R2_001.fastq.gz"

read1file=$(find ../data -name $read1name)
read2file=$(find ../data -name $read1name)


###############################################################################
# clean: trimming & quality filter
echo "clean: trimming & quality filter"
skewer -m pe -t 10 $read1file $read2file -o $samplename

# trimmed1=$(find ../data -name "*"$samplename"*trimmed-pair1*")
# trimmed2=$(find ../data -name "*"$samplename"*trimmed-pair2*")
trimmed1=$samplename'-trimmed-pair1.fastq'
trimmed2=$samplename'-trimmed-pair2.fastq'


###############################################################################
# check sequence quality with FastQC 

# ~/Desktop/Files/Software/fastqc/FastQC/fastqc /home/ubuntu/Desktop/Files/Documents/Projects/Gre-Net_project/MPI_field/data/GT10_samples_2016/fastaq_files/trimmed_pairedend_S1/francoisfield_S1_L005_R1_001.fastq-trimmed-pair1.fastq /home/ubuntu/Desktop/Files/Documents/Projects/Gre-Net_project/MPI_field/data/GT10_samples_2016/fastaq_files/trimmed_pairedend_S1/francoisfield_S1_L005_R1_001.fastq-trimmed-pair2.fastq --extract -o /home/ubuntu/Desktop/Files/Documents/Projects/Gre-Net_project/MPI_field/data/GT10_samples_2016/fastaq_files/fastqc/paired-end/

###############################################################################
# mapping to reference

if [! -f TAIR10_chr_all.fas]; then
	echo 'Reference genome not found'
	echo 'do you want to download? [yes/no]'
	read answer
	if [$answer = 'yes']; then
		# download from www.arabidopsis.org
		bash downloadreference.sh
		# index the fasta for later mapping
		bwa index TAIR10_chr_all.fas  
	else
		echo "no reference genome provided, exiting now"
		exit 1
	fi
fi

echo "mapping to reference"
bwa mem TAIR10_chr_all.fas $trimmed1 $trimmed2 > $samfile


###############################################################################
# extra duplicates Picard tools picard.sourceforge.net

# java -Xmx1g -jar /apps/PICARD/1.95/MarkDuplicates.jar \
#                             MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000\
#                             METRICS_FILE=out.metrics \
#                             REMOVE_DUPLICATES=true \
#                             ASSUME_SORTED=true  \
#                             VALIDATION_STRINGENCY=LENIENT \
#                             INPUT=out.sorted.bam \
#                             OUTPUT=out.dedupe.bam

# samtools index out.dedupe.bam

# samtools mpileup -uf reference.fa out.dedupe.bam | /apps/SAMTOOLS/0.1.19/bin/bcftools view -bvcg - > out.bcf

###############################################################################
# alignment

echo "aligning"
samtools view -S -b  $samfile >  $bamfile
samtools sort  $bamfile  $bamfile"sorted"
samtools index $bamfile"sorted".bam


###############################################################################
# snp calling - NOT NECESSARY!
#freebayes -f /data_input/index/TAIR10_chr_all.fas /data_output/S9/FieldExp_S9.sorted.bam > FieldExp_S9.freebayes.vcf

# get the coverage per position  - customized tool by Clemens Weiss
echo "allele counts per position"
./pile freq -h -b $bamfile"sorted".bam


